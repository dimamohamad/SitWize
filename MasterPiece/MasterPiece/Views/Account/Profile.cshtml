@*@model MasterPiece.Models.User

    <section class="profile-section">
        <div class="profile-header">
            <img src="@Url.Content("~/Images/" + Model.UserImage)" alt="Profile Image" class="profile-image">
            <h2>Personal Information</h2>
            <button id="editProfileBtn" class="btn btn-primary">Edit Profile</button>
            <button id="resetPasswordBtn" class="btn btn-warning">Reset Password</button>
        </div>
        <div class="profile-info">
            @using (Html.BeginForm("Profile", "Account", FormMethod.Post, new { enctype = "multipart/form-data", id = "profileForm" }))
            {
                @Html.AntiForgeryToken()
                <div class="form-group">
                    <label for="FirstName"><strong>First Name:</strong></label>
                    @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control", @id = "FirstName", @readonly = "readonly" })
                </div>
                <div class="form-group">
                    <label for="LastName"><strong>Last Name:</strong></label>
                    @Html.TextBoxFor(m => m.LastName, new { @class = "form-control", @id = "LastName", @readonly = "readonly" })
                </div>
                <div class="form-group">
                    <label for="Email"><strong>Email:</strong></label>
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @readonly = "readonly" })
                </div>
                <div class="form-group">
                    <label for="PhoneNumber"><strong>Phone:</strong></label>
                    @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control", @id = "PhoneNumber", @readonly = "readonly" })
                </div>
                <div class="form-group">
                    <label for="Address"><strong>Address:</strong></label>
                    @Html.TextBoxFor(m => m.Address, new { @class = "form-control", @id = "Address", @readonly = "readonly" })
                </div>
                <div class="form-group">
                    <label for="Image"><strong>Profile Picture:</strong></label>
                    <input type="file" name="imageFile" id="Image" class="form-control" disabled />
                </div>
                <button type="submit" class="btn btn-success" id="saveProfileBtn" disabled>Save Changes</button>
            }
        </div>
    </section>

    <script>
        document.getElementById("editProfileBtn").addEventListener("click", function () {
            document.getElementById("FirstName").removeAttribute("readonly");
            document.getElementById("LastName").removeAttribute("readonly");
            document.getElementById("PhoneNumber").removeAttribute("readonly");
            document.getElementById("Address").removeAttribute("readonly");
            document.getElementById("Image").removeAttribute("disabled");
            document.getElementById("saveProfileBtn").removeAttribute("disabled");
        });

        document.getElementById("resetPasswordBtn").addEventListener("click", function () {
            window.location.href = '@Url.Action("ResetPassword", "Account")';
        });
    </script>*@




@model MasterPiece.Models.User

@{
    ViewBag.Title = "Profile";
}

<section class="profile-section">
    <div class="profile-header">
        @if (!string.IsNullOrEmpty(Model.UserImage))
        {
            <img src="~/Images/@Model.UserImage" alt="Profile Image" class="profile-image" />
        }
        else
        {
            <img src="~/img/default-profile.png" alt="Default Profile Image" class="profile-image" /> <!-- Use a default image if no user image -->
        }
        <h2>Personal Information</h2>
    </div>
    <div class="profile-info">
        <p><strong>First Name:</strong></p>
        <p id="parentName">@Model.FirstName</p>
        <p><strong>Last Name:</strong></p>
        <p id="parentLastName">@Model.LastName</p>
        <p><strong>Email:</strong></p>
        <p id="parentEmail">@Model.Email</p>
        <p><strong>Phone:</strong></p>
        <p id="parentPhone">@Model.PhoneNumber</p>
        <p><strong>Address:</strong></p>
        <p id="parentLocation">@Model.Address</p>
    </div>
</section>

<div class="action-links">
    <p>
        @Html.ActionLink("Edit Profile", "Edit", new { id = Model.UserID }) |
        @Html.ActionLink("Reset Password", "ResetPassword", new { id = Model.UserID }) |
        @Html.ActionLink("Your Bookings", "YourBookings", "Account") 
        @*@Html.ActionLink("Back to Profile", "Profile")*@
    </p>
</div>
<style>



    body {
        background-color: #f8f9fa;
        font-family: Arial, sans-serif;
        line-height: 1.6;
        color: #333;
        margin: 0;
        padding: 0;
    }
    .action-links {
        text-align: center; /* Center the text inside this div */
        margin-top: 20px; /* Optional: Add some margin above the links */
    }

/*    .container {
        max-width: 800px;
        margin: auto;
        padding: 20px;
    }*/

    header {
        background: #99005C;
        color: white;
        padding: 1rem 0;
        text-align: center;
    }

        header h1 {
            margin: 0;
        }

    .profile-section {
        background: white;
        margin: 20px auto; /* Center horizontally */
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
       width:600px; /* Limit the width */
        display: flex; /* Use flexbox */
        flex-direction: column; /* Stack children vertically */
        align-items: center; /* Center items horizontally */
    }


    /* .profile-section h2 {
        color: #99005C;
        border-bottom: 2px solid #99005C;
        padding-bottom: 10px;
    } */

    .profile-info {
        display: grid;
        grid-template-columns: 1fr 2fr;
        gap: 10px;
    }

        .profile-info p {
            margin: 5px 0;
        }

        .profile-info strong {
            font-weight: bold;
        }

    .care-needs {
        list-style-type: none;
        padding: 0;
    }

        .care-needs li {
            background: #f9f9f9;
            margin: 5px 0;
            padding: 10px;
            border-radius: 5px;
        }

    .edit-profile {
        background: #99005C;
        color: white;
        padding: 10px 15px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        font-size: 1rem;
        transition: background-color 0.3s;
    }

        .edit-profile:hover {
            background: #7c0049;
        }

    .modal {
        display: none;
        position: fixed;
        z-index: 1000;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgba(0,0,0,0.4);
    }

    .modal-content {
        background-color: #fefefe;
        margin: 10% auto;
        padding: 20px;
        border: 1px solid #888;
        width: 80%;
        max-width: 500px;
        border-radius: 10px;
        position: relative;
    }

    .close {
        color: #aaa;
        position: absolute;
        top: 10px;
        right: 20px;
        font-size: 28px;
        font-weight: bold;
    }

        .close:hover,
        .close:focus {
            color: black;
            text-decoration: none;
            cursor: pointer;
        }

    .modal input {
        width: 100%;
        padding: 10px;
        margin: 5px 0 15px 0;
        display: inline-block;
        border: 1px solid #ccc;
        box-sizing: border-box;
        border-radius: 5px;
    }

    .modal button {
        background-color: #99005c;
        color: white;
        padding: 10px 15px;
        border: none;
        cursor: pointer;
        width: 100%;
        border-radius: 5px;
    }

        .modal button:hover {
            opacity: 0.8;
        }

    .profile-image {
        width: 100px;
        height: 100px;
        border-radius: 50%;
        object-fit: cover;
        border: 2px solid #99005C;
        margin-right: 10px;
    }

    .profile-header {
        display: flex;
        align-items: center;
        margin-bottom: 20px;
    }

    body.modal-open {
        overflow: hidden;
    }

    @@media (max-width: 600px) {
        .profile-section {
            background: white;
            margin: 20px auto; /* Center horizontally */
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            width: 400px; /* Limit the width */
            display: flex; /* Use flexbox */
            flex-direction: column; /* Stack children vertically */
            align-items: center; /* Center items horizontally */
        }

        .profile-info {
            grid-template-columns: 1fr;
        }

        .profile-header {
            flex-direction: column;
            align-items: center;
        }

            .profile-header img {
                margin-bottom: 10px;
            }
    }
</style>