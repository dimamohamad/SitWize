@model MasterPiece.Models.Service

@{
    ViewBag.Title = "Book " + Model.ServiceName;
}

<style>
    body {
        background-color: #f8f9fa;
        font-family: Arial, sans-serif;
    }



    .card {
        border: none;
        border-radius: 10px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    }

    .card-body {
        padding: 2rem;
    }

    .form-label {
        font-weight: bold;
        color: black
    }

    .form-check-label {
        margin-right: 10px;
    }

    #days .form-check-input:checked + .form-check-label {
        color: white;
        background-color: #D9278D;
        border-radius: 50%;
        padding: 5px 10px;
    }

    .btn-primary {
        background-color: #D9278D;
        border: none;
        /* width: 100%; */
        padding: 10px;
        font-size: 16px;
    }

        .btn-primary:hover {
            background-color: #c71b7c;
        }

    #days .form-check-inline {
        margin-bottom: 10px;
    }

    .Regularicon {
        width: 50px;
        height: 50px;
    }
</style>


<!-- Page Header End -->
<div class="container-xxl py-5 page-header position-relative mb-5">
    <div class="container py-5">
        <h1 class="display-2 text-white animated slideInDown mb-4">Services</h1>
        <nav aria-label="breadcrumb animated slideInDown">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="../index.html">Home</a></li>
                <li class="breadcrumb-item"><a href="#">Pages</a></li>
                <li class="breadcrumb-item text-white active" aria-current="page">Services</li>
            </ol>
        </nav>
    </div>
</div>




<div class="container mt-5">
    <div class="text-center mb-4">
        <img src="~/img/1.png"
             alt="Regular sitter" class="Regularicon">
        <h1 class="d-inline-block align-middle ms-2">Regular sitter</h1>
        <p>Weekly, before/after school</p>
    </div>
    <div class="card mx-auto" style="max-width: 600px;">
        <div class="card-body">
            @using (Html.BeginForm("BookService1", "Service", new { id = Model.ServiceID }, FormMethod.Post, new { id = "scheduleForm" }))
            {
                @Html.AntiForgeryToken()

                <!-- Start Date -->
                <div class="mb-3">
                    @Html.Label("Start Date", htmlAttributes: new { @class = "form-label" })
                    @Html.TextBox("StartDate", null, new { @class = "form-control", type = "date", id = "startDate" })
                    <div class="form-check mt-2">
                        @Html.CheckBox("StartDateFlexible", new { @class = "form-check-input", id = "flexibleStartDate" })
                        @Html.Label("Start date is flexible", htmlAttributes: new { @class = "form-check-label", @for = "flexibleStartDate" })
                    </div>
                </div>

                <!-- Days Selection -->
                <div class="mb-3">
                    @Html.Label("Days", htmlAttributes: new { @class = "form-label" })
                    <div id="days" class="d-flex flex-wrap">
                        @foreach (var day in new[] { "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday" })
                        {
                            <div class="form-check form-check-inline">
                                @Html.CheckBox("Days", false, new { @class = "form-check-input", @value = day, @id = day.ToLower() })
                                @Html.Label(day.Substring(0, 3), day, htmlAttributes: new { @class = "form-check-label", @for = day.ToLower() })
                            </div>
                        }
                    </div>
                </div>

                <!-- Start Time -->
                <div class="mb-3">
                    @Html.Label("Start Time", htmlAttributes: new { @class = "form-label" })
                    @Html.TextBox("StartTime", null, new { @class = "form-control", type = "time", id = "startTime", onchange = "calculateDuration()" })
                </div>

                <!-- End Time -->
                <div class="mb-3">
                    @Html.Label("End Time", htmlAttributes: new { @class = "form-label" })
                    @Html.TextBox("EndTime", null, new { @class = "form-control", type = "time", id = "endTime", onchange = "calculateDuration()" })
                </div>

                <!-- Duration -->
                <div class="mb-3">
                    @Html.Label("Duration", htmlAttributes: new { @class = "form-label" })
                    @Html.TextBox("Duration", null, new { @class = "form-control", @readonly = "readonly", id = "duration" })
                </div>

                <!-- Submit Button -->
                <button type="submit" class="btn btn-primary w-100">Next</button>
            }
        </div>
    </div>
</div>
<script>


    function calculateDuration() {
        const startTime = document.getElementById('startTime').value;
        const endTime = document.getElementById('endTime').value;
        const durationField = document.getElementById('duration');

        if (startTime && endTime) {
            const start = new Date('1970-01-01T' + startTime + 'Z');
            const end = new Date('1970-01-01T' + endTime + 'Z');
            let duration = (end - start) / 1000 / 60; // duration in minutes

            if (duration < 0) {
                duration += 24 * 60; // adjust for times that cross midnight
            }

            const hours = Math.floor(duration / 60);
            const minutes = duration % 60;

            durationField.value = `${hours} hour(s) ${minutes} minute(s)`;
        } else {
            durationField.value = '';
        }
    }</script>
