
@model MasterPiece.Models.Service

@{
    ViewBag.Title = "Book " + Model.ServiceName;

}




<style>
    body {
        background-color: #f8f9fa;
        font-family: Arial, sans-serif;
    }

    .card {
        border: none;
        border-radius: 10px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    }

    .card-body {
        padding: 2rem;
    }

    .form-label {
        font-weight: bold;
        color: black
    }

    .form-check-label {
        margin-right: 10px;
    }

    .btn-primary {
        background-color: #D9278D;
        border: none;
        padding: 10px;
        font-size: 16px;
    }

        .btn-primary:hover {
            background-color: #D9278D;
        }

    .icon {
        width: 50px;
        height: 50px;
    }



</style>
<div class="container-xxl py-5 page-header position-relative mb-5">
    <div class="container py-5">
        <h1 class="display-2 text-white animated slideInDown mb-4">Services</h1>
        <nav aria-label="breadcrumb animated slideInDown">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="../index.html">Home</a></li>
                <li class="breadcrumb-item"><a href="#">Pages</a></li>
                <li class="breadcrumb-item text-white active" aria-current="page">One Time Sitter</li>
            </ol>
        </nav>
    </div>
</div>
<!-- Page Header End -->

<div class="container mt-5">
    <div class="text-center mb-4">
        <img src="~/img/3.png" alt="One-time sitter" class="icon">
        <h1 class="d-inline-block align-middle ms-2">One-time sitter</h1>
        <p>Date night, upcoming event, backup</p>
    </div>
    <div class="card mx-auto" style="max-width: 600px;">
        <div class="card-body">
            <!-- Begin the form with correct action and method -->
            @using (Html.BeginForm("BookService3", "Service", FormMethod.Post))
            {
                @Html.AntiForgeryToken()

                <!-- Hidden field to include the service ID -->
                @Html.Hidden("id", Model.ServiceID)

                <div class="mb-3">
                    <label for="dateNeeded" class="form-label">Date needed</label>
                    <input type="date" class="form-control" id="dateNeeded" name="dateNeeded">
                </div>

                <div class="mb-3">
                    <label for="startTime" class="form-label">Start time</label>
                    <input type="time" class="form-control" id="startTime" name="startTime" onchange="calculateDuration()">
                </div>

                <div class="mb-3">
                    <label for="endTime" class="form-label">End time</label>
                    <input type="time" class="form-control" id="endTime" name="endTime" onchange="calculateDuration()">
                </div>

                <div class="mb-3">
                    <label for="duration" class="form-label">Duration:</label>
                    <input type="text" class="form-control" id="duration" name="duration" readonly>
                </div>

                <div class="mb-3">
                    <label for="reason" class="form-label">Reason for needing care</label>
                    <select class="form-select" id="reason" name="reason">
                        <option>Date night</option>
                        <option>Special event</option>
                        <option>Work-related</option>
                        <option>Other</option>
                    </select>
                </div>

                <button type="submit" class="btn btn-primary w-100">Next</button>
            }
        </div>
    </div>
</div>

<script>
    function calculateDuration() {
        const startTime = document.getElementById('startTime').value;
        const endTime = document.getElementById('endTime').value;
        const durationField = document.getElementById('duration');

        if (startTime && endTime) {
            const start = new Date('1970-01-01T' + startTime + 'Z');
            const end = new Date('1970-01-01T' + endTime + 'Z');
            let duration = (end - start) / 1000 / 60; // duration in minutes

            if (duration < 0) {
                duration += 24 * 60; // adjust for times that cross midnight
            }

            const hours = Math.floor(duration / 60);
            const minutes = duration % 60;

            durationField.value = `${hours} hour(s) ${minutes} minute(s)`;
        } else {
            durationField.value = '';
        }
    }
</script>
